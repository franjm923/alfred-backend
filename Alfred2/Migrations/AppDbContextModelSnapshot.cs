// <auto-generated />
using System;
using Alfred2.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Alfred2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);
            modelBuilder.Entity("Alfred2.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("TelefonoBot")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TelefonoBot")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Alfred2.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasIndex("UsuarioId", "Telefono")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Alfred2.Models.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Creado")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<string>("FormaPago")
                        .HasColumnType("text");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("text");

                    b.Property<decimal?>("PrecioEnvio")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PrecioTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("Producto")
                        .HasColumnType("text");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId", "Creado");

                    b.HasIndex("UsuarioId", "Estado", "Creado");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("Alfred2.Models.Solicitud", b =>
                {
                    b.HasOne("Alfred2.Models.Cliente", "Cliente")
                        .WithMany("Solicitudes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfred2.Models.Usuario", "Usuario")
                        .WithMany("Solicitudes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Alfred2.Models.Cliente", b =>
                {
                    b.HasOne("Alfred2.Models.Usuario", "Usuario")
                       .WithMany("Clientes")
                       .HasForeignKey("UsuarioId")
                       .OnDelete(DeleteBehavior.Cascade)
                       .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("Alfred2.Models.Usuario", b =>
                {
                    b.HasOne("Alfred2.Models.Usuario", "Usuario")
                       .WithMany("Clientes")
                       .HasForeignKey("UsuarioId")
                       .OnDelete(DeleteBehavior.Cascade)
                       .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("Alfred2.Models.Usuario", b =>
                {
                    b.HasOne("Alfred2.Models.Usuario", "Usuario")
                       .WithMany("Clientes")
                       .HasForeignKey("UsuarioId")
                       .OnDelete(DeleteBehavior.Cascade)
                       .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("Alfred2.Models.Usuario", b =>
                {
                    b.HasOne("Alfred2.Models.Usuario", "Usuario")
                        .WithMany("Clientes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                    b.Navigation("Usuario");
                    b.Navigation("Solicitudes");
                });
                modelBuilder.Entity("Alfred2.Models.Usuario", b =>
                {
                    b.Navigation("Clientes");
                    b.Navigation("Solicitudes");
                });
#pragma warning restore 612, 618
                }
    }
}
